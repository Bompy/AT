"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var Promise=require("bluebird"),bCrypt=require("bcrypt-nodejs"),Canon=function(){return function(e,r,i,n,t,s,o,d){var a=this;this.events=e,this.checkThrow=r,this.getUsers=i,this.getUserById=n,this.setUserInSession=t,this.getUserFromSession=s,this.signOutOfSession=o,this.cleanUsers=d,this.middleware=[],this.isValidPassword=function(e,r){return bCrypt.compareSync(e,r)},this.createHash=function(e){return bCrypt.hashSync(e,bCrypt.genSaltSync(10))},this.signIn=function(e,r,i,n){return void 0===n&&(n=!1),a.checkThrow(n).then(function(r){return a.getUsers({emailAddress:e},null,null)}).then(function(i){return new Promise(function(n,t){return i.length?i[0].verification.verified?a.isValidPassword(r,i[0].password)?n(i[0]):(new Promise(function(i,n){a.events.invalidPassword({emailAddress:e,password:r}),i()}),void t({identifier:"InvalidPassword",data:{}})):t({identifier:"NotVerified",data:{}}):t({identifier:"UserNotFound",data:{}})})}).then(function(e){return a.setUserInSession(e.id,i).then(function(r){return new Promise(function(r,i){a.events.signedIn({user:e}),r()}),Promise.resolve(e)})}).catch(function(r){return new Promise(function(i,n){a.events.signInFailed({emailAddress:e,reason:r}),i()}),r.identifier&&"UserNotFound"===r.identifier?Promise.reject(r):r.identifier&&"NotVerified"===r.identifier?Promise.reject(r):r.identifier&&"InvalidPassword"===r.identifier?Promise.reject(r):Promise.reject({identifier:"SignInFailed",data:{reason:r}})})},this.signOut=function(e,r){return void 0===r&&(r=!1),a.checkThrow(r).then(function(r){return a.signOutOfSession(e)}).catch(function(r){return new Promise(function(i,n){a.events.signOutFailed({req:e,reason:r}),i()}),Promise.reject({identifier:"SignOutFailed",data:{reason:r}})})},this.getCurrentUser=function(e,r){return void 0===r&&(r=!1),a.checkThrow(r).then(function(r){return a.getUserFromSession(e)}).then(function(e){return a.cleanUsers([e])}).then(function(e){return Promise.resolve(e[0])}).catch(function(r){return new Promise(function(i,n){a.events.getCurrentUserFailed({req:e,reason:r})}),r.identifier&&"DocumentNotFound"===r.identifier?Promise.reject(r):r.identifier&&"NoCurrentUser"===r.identifier?Promise.reject(r):Promise.reject({identifier:"GetCurrentUserFailed",data:{reason:r}})})},this.authPassword=function(e,r,i){return void 0===i&&(i=!1),a.checkThrow(i).then(function(r){return a.getUserById(e)}).then(function(i){return new Promise(function(n,t){if(a.isValidPassword(r,i.password))return n(i);new Promise(function(i,n){a.events.invalidPassword({userId:e,password:r}),i()}),t({identifier:"InvalidPassword",data:{userId:e,password:r}})})}).catch(function(i){return new Promise(function(n,t){a.events.authPasswordFailed({userId:e,password:r,reason:i}),n()}),i.identifier&&"DocumentNotFound"===i.identifier?Promise.reject(i):i.identifier&&"InvalidPassword"===i.identifier?Promise.reject(i):Promise.reject({identifier:"AuthPasswordFailed",data:{}})})},this.createHashedPassword=function(e,r){return void 0===r&&(r=!1),a.checkThrow(r).then(function(r){return new Promise(function(r,i){try{r(a.createHash(e))}catch(e){i(e)}})}).catch(function(r){return new Promise(function(i,n){a.events.createHashedPasswordFailed({password:e,reason:r}),i()}),Promise.reject({identifier:"CreateHashedPasswordFailed",data:{}})})}}}();exports.default=Canon;
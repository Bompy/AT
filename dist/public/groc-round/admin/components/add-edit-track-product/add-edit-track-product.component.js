var GrocRoundAdminAddEditTrackProductComponent;!function(t){var e=function(){return function(t,e,a,r,i,c,o,d,n){var s=this;this.$q=t,this.$routeParams=e,this.$location=a,this.ToastService=r,this.TrackProductsService=i,this.AutoCompleteService=c,this.SelectService=o,this.ProductsService=d,this.TracksService=n,this.clearMembers=function(){s.products=[],s.productText=null,s.selectedItem=null,s.addDetails={track:null,product:null,quantity:0,value:0},s.updateDetails={quantity:0,value:0}},this.determineModeAndGetData=function(){if(s.$routeParams.trackProductId)s.editMode=!0,s.loading=!0,s.getTrackProductInfo(s.$routeParams.trackProductId).finally(function(){s.loading=!1});else{var t=s.$location.search();if(!t||!t.trackId)return void window.history.back();s.editMode=!1,s.getTrack()}},this.attachToPromises=function(){s.ProductsService.promises.getProducts.then(function(t){t&&(s.errorMessage=null,s.ProductsService.products.forEach(function(t){s.products.push({productId:t.id,label:t.label})}))}).catch(function(t){s.errorMessage=t&&t.message?t.message:"Couldn't get shops"})},this.getTrack=function(){s.loading=!0,s.TracksService.getTrack(s.$location.search().trackId).then(function(t){s.addDetails.track={trackId:t.id,trackName:t.trackName}}).catch(function(t){s.errorMessage=t&&t.message?t.message:"Couldn't get trackProduct record"}).finally(function(){s.loading=!1})},this.getTrackProductInfo=function(t){return s.loading=!0,s.TrackProductsService.getTrackProduct(t).then(function(t){s.metaTrack=t.track,s.metaProduct=t.product,s.updateDetails.quantity=t.quantity,s.updateDetails.value=t.value}).catch(function(t){s.errorMessage=t&&t.message?t.message:"Couldn't get trackProduct record"}).finally(function(){s.loading=!1})},this.queryProducts=function(t){return s.AutoCompleteService.queryProducts(t,s.products)},this.addTrackProduct=function(){var t=s.AutoCompleteService.getProduct(s.productText,s.products);return t?(s.addDetails.product={productId:t.productId,label:t.label},s.addDetails.track?s.addDetails.quantity?s.addDetails.value?(s.adding=!0,s.TrackProductsService.addTrackProduct(s.addDetails).then(function(t){s.$location.path("/trackProducts?track="+s.addDetails.track.trackId)}).finally(function(){s.adding=!1})):s.ToastService.showSimple("Value is missing"):s.ToastService.showSimple("Quantity is missing"):s.ToastService.showSimple("Track info is missing")):s.ToastService.showSimple("Product info is missing")},this.updateTrackProduct=function(){return s.updateDetails.quantity?s.updateDetails.value?(s.updating=!0,s.TrackProductsService.updateTrackProduct(s.$routeParams.trackProductId,s.updateDetails).then(function(t){window.history.back()}).finally(function(){s.updating=!1})):s.ToastService.showSimple("Value is missing"):s.ToastService.showSimple("Quantity is missing")},this.clearMembers(),this.determineModeAndGetData(),this.attachToPromises()}}();t.Component=e}(GrocRoundAdminAddEditTrackProductComponent||(GrocRoundAdminAddEditTrackProductComponent={}));
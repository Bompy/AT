var GrocRoundAdminShopsService;!function(e){var s=function(){return function(e,s,t,o,r){var n=this;this.$q=e,this.$http=s,this.$timeout=t,this.ToastService=o,this.ContextsService=r,this.urlPrefix="/grocRound/admin/shops",this.getShops=function(){n.progress.getShops=!0;var e=n.$http.get(n.urlPrefix+"/getShops").then(function(e){n.progress.getShops=!1;var s=e.data;if(s.success)return n.$timeout(function(){n.shops.length&&(n.shops=[]),s.payload.foundShops.forEach(function(e){n.shops.push(e)})}),n.$q.resolve(!0);var t=s.message?s.message:"Couldn't get shop records";return n.ToastService.showSimple(t),n.$q.reject({message:t})}).catch(function(e){return n.progress.getShops=!1,n.ToastService.showSimple("Shops not found"),n.$q.reject({message:"Shops not found"})});return angular.copy(e,n.promises.getShops),n.promises.getShops},this.getShop=function(e){return n.$http.get(n.urlPrefix+"/getShop/"+e).then(function(e){var s=e.data;if(s.success)return n.$q.resolve(s.payload.foundShop);var t=s.message?s.message:"Couldn't get shop record";return n.ToastService.showSimple(t),n.$q.reject({message:t})}).catch(function(e){return n.progress.getShops=!1,n.ToastService.showSimple("Shop not found"),n.$q.reject({message:"Shop not found"})})},this.addShop=function(e){return n.$http.post(n.urlPrefix+"/addShop",e).then(function(e){var s=e.data;return s.success?(n.$timeout(function(){n.shops.push(s.payload.addedShop)}),n.ToastService.showSimple("Shop Added"),n.$q.resolve()):n.$q.reject({message:s.message?s.message:""})}).catch(function(e){return e.message?(n.ToastService.showSimple(e.message),n.$q.reject({message:e.message})):(n.ToastService.showSimple("Something went wrong"),n.$q.reject({message:"Something went wrong"}))})},this.updateShop=function(e,s){return n.$http.post(n.urlPrefix+"/updateShop/"+e,s).then(function(e){var s=e.data;return s.success?(n.$timeout(function(){var e=n.shops.filter(function(e){return s.payload.updatedShop.id===e.id});e.length&&angular.copy(s.payload.updatedShop,n.shops[n.shops.indexOf(e[0])])}),n.ToastService.showSimple("Shop record updated"),n.$q.resolve()):n.$q.reject({message:s.message?s.message:""})}).catch(function(e){return e.message?(n.ToastService.showSimple(e.message),n.$q.reject({message:e.message})):(n.ToastService.showSimple("Something went wrong"),n.$q.reject({message:"Something went wrong"}))})},this.removeShop=function(e){return n.$http.get(n.urlPrefix+"/deleteShop/"+e).then(function(s){var t=s.data;return t.success?(n.$timeout(function(){var s=n.shops.filter(function(s){return s.id===e});s.length&&n.shops.splice(n.shops.indexOf(s[0]),1)}),n.ToastService.showSimple("Shop record deleted"),n.$q.resolve()):n.$q.reject({message:t.message?t.message:""})}).catch(function(e){return e.message?(n.ToastService.showSimple(e.message),n.$q.reject({message:e.message})):(n.ToastService.showSimple("Something went wrong"),n.$q.reject({message:"Something went wrong"}))})},this.progress={getShops:!1},this.promises={getShops:this.$q.resolve(!1)},this.shops=[],this.getShops()}}();e.Service=s}(GrocRoundAdminShopsService||(GrocRoundAdminShopsService={}));